# Disable listening for DNS
port=0
enable-tftp
tftp-root=/var/lib/ironic/tftpboot

log-dhcp

{{ range .DHCPRanges }}
{{- /*
    The following sed can be used to filter configuration by PodIndex:
       sed -e '/BLOCK_PODINDEX_${PODINDEX}_BEGIN/,/BLOCK_PODINDEX_${PODINDEX}_END/p' \
           -e '/BLOCK_PODINDEX_.*_BEGIN/,/BLOCK_PODINDEX_.*_END/d' \
           -i ${DNSMASQ_CFG}
    */ -}}
### BLOCK_PODINDEX_{{ .PodIndex }}_BEGIN ###
# DHCP Range {{ .Start }} - {{ .End }}
dhcp-range={{ if .Name }}set:{{ .Name }},{{ end }}{{ .Start }},{{ .End }},{{ if .Prefix }}{{ .Prefix }},{{ else if .Netmask }}{{ .Netmask }},{{ end }}10m
{{ if .Gateway -}}
dhcp-option={{ if .Name }}tag:{{ .Name }},{{ end }}option:router,{{ .Gateway }}
{{ else -}}
# Disable router on over provision network
dhcp-option={{ if .Name }}tag:{{ .Name }},{{ end }}3
{{ end -}}
{{ if .MTU -}}
# Set the MTU option
dhcp-option-force={{ if .Name }}tag:{{ .Name }},{{ end }}option:mtu,{{ .MTU }}
{{ end -}}
### BLOCK_PODINDEX_{{ .PodIndex }}_END ###

{{ end }}


# Disable default router(s) and DNS over provisioning network
dhcp-option=6

conf-dir=/etc/dnsmasq.d
dhcp-hostsdir=/var/lib/ironic-inspector/dhcp-hostsdir
log-facility=-
user=root

# Boot for Etherboot gPXE. The idea is to send two different
# filenames, the first loads gPXE, and the second tells gPXE what to
# load. The dhcp-match sets the gpxe tag for requests from gPXE.
dhcp-userclass=set:gpxe,"gPXE"
dhcp-boot=tag:gpxe,/ipxe.pxe

dhcp-match=set:ipxe,175 # iPXE sends a 175 option.
dhcp-match=set:efi,option:client-arch,7
dhcp-match=set:efi,option:client-arch,9
dhcp-match=set:efi,option:client-arch,11

# dhcpv6s for Client System Architecture Type (61)
dhcp-match=set:efi6,option6:61,0007
dhcp-match=set:efi6,option6:61,0009
dhcp-match=set:efi6,option6:61,0011
dhcp-userclass=set:ipxe6,iPXE

# Client is already running iPXE; move to next stage of chainloading
dhcp-boot=tag:ipxe,${INSPECTOR_HTTP_URL}inspector.ipxe
dhcp-option=tag:ipxe6,option6:bootfile-url,${INSPECTOR_HTTP_URL}inspector.ipxe

# Client is PXE booting over EFI without iPXE ROM; send EFI version of iPXE chainloader
dhcp-boot=tag:efi,tag:!ipxe,snponly.efi
dhcp-option=tag:efi6,tag:!ipxe6,option6:bootfile-url,tftp://${InspectorNetworkIPForURL}/snponly.efi

# Client is running PXE over BIOS; send BIOS version of iPXE chainloader
dhcp-boot=undionly.kpxe,localhost.localdomain,${InspectorNetworkIPForURL}
